/* Generated by re2c */
#line 1 "src/args.re"
// vim:set ft=cpp:

#include "adlib/lib.h"
#include "args.h"

void Help() {
  PrintLn("unward [OPTIONS] files-or-directories ...");
  PrintLn("");
  PrintLn("  -o  --output DIR    output generated code to DIR");
  PrintLn("  -i  --inplace       rewrite source files in place");
  PrintLn("  -h  --help          display this message");
  PrintLn("");
}

Options* ParseArgs() {
  Options *opts = new Options();
  opts->InputFiles = new StrArr();
  char mode = '\0';
  for (Int i = 0; i < Args->len(); i++) {
    Str *arg = Args->at(i);
    if (mode == 'o') {
      opts->OutputDir = arg->clone();
      mode = '0';
      continue;
    }
    char *pos = arg->c_str();
    char *marker;
    
#line 32 "src/args.cc"
{
	char yych;
	yych = *pos;
	switch (yych) {
	case '-':	goto yy4;
	default:	goto yy2;
	}
yy2:
	++pos;
#line 49 "src/args.re"
	{
        opts->InputFiles->add(arg);
	continue;
      }
#line 47 "src/args.cc"
yy4:
	yych = *(marker = ++pos);
	switch (yych) {
	case '-':	goto yy6;
	case 'h':	goto yy8;
	case 'i':	goto yy9;
	case 'o':	goto yy10;
	default:	goto yy5;
	}
yy5:
#line 43 "src/args.re"
	{
            PrintLn(S("Invalid option: ")->add(arg));
	    PrintLn("");
            Help();
            exit(1);
          }
#line 65 "src/args.cc"
yy6:
	yych = *++pos;
	switch (yych) {
	case 'h':	goto yy11;
	case 'i':	goto yy12;
	case 'o':	goto yy13;
	default:	goto yy7;
	}
yy7:
	pos = marker;
	goto yy5;
yy8:
	yych = *++pos;
	if (yych <= 0x00) goto yy14;
	goto yy7;
yy9:
	yych = *++pos;
	if (yych <= 0x00) goto yy16;
	goto yy7;
yy10:
	yych = *++pos;
	if (yych <= 0x00) goto yy18;
	goto yy20;
yy11:
	yych = *++pos;
	switch (yych) {
	case 'e':	goto yy22;
	default:	goto yy7;
	}
yy12:
	yych = *++pos;
	switch (yych) {
	case 'n':	goto yy23;
	default:	goto yy7;
	}
yy13:
	yych = *++pos;
	switch (yych) {
	case 'u':	goto yy24;
	default:	goto yy7;
	}
yy14:
	++pos;
#line 42 "src/args.re"
	{ Help(); exit(0); }
#line 111 "src/args.cc"
yy16:
	++pos;
#line 40 "src/args.re"
	{ opts->InPlace = true; continue; }
#line 116 "src/args.cc"
yy18:
	++pos;
#line 37 "src/args.re"
	{ mode = 'o'; continue; }
#line 121 "src/args.cc"
yy20:
	yych = *++pos;
	if (yych <= 0x00) goto yy25;
	goto yy20;
yy22:
	yych = *++pos;
	switch (yych) {
	case 'l':	goto yy27;
	default:	goto yy7;
	}
yy23:
	yych = *++pos;
	switch (yych) {
	case 'p':	goto yy28;
	default:	goto yy7;
	}
yy24:
	yych = *++pos;
	switch (yych) {
	case 't':	goto yy29;
	default:	goto yy7;
	}
yy25:
	++pos;
#line 38 "src/args.re"
	{ opts->OutputDir = arg->range_excl(2, arg->len()); }
#line 148 "src/args.cc"
yy27:
	yych = *++pos;
	switch (yych) {
	case 'p':	goto yy30;
	default:	goto yy7;
	}
yy28:
	yych = *++pos;
	switch (yych) {
	case 'l':	goto yy31;
	default:	goto yy7;
	}
yy29:
	yych = *++pos;
	switch (yych) {
	case 'p':	goto yy32;
	default:	goto yy7;
	}
yy30:
	yych = *++pos;
	if (yych <= 0x00) goto yy33;
	goto yy7;
yy31:
	yych = *++pos;
	switch (yych) {
	case 'a':	goto yy35;
	default:	goto yy7;
	}
yy32:
	yych = *++pos;
	switch (yych) {
	case 'u':	goto yy36;
	default:	goto yy7;
	}
yy33:
	++pos;
#line 41 "src/args.re"
	{ Help(); exit(0); }
#line 187 "src/args.cc"
yy35:
	yych = *++pos;
	switch (yych) {
	case 'c':	goto yy37;
	default:	goto yy7;
	}
yy36:
	yych = *++pos;
	switch (yych) {
	case 't':	goto yy38;
	default:	goto yy7;
	}
yy37:
	yych = *++pos;
	switch (yych) {
	case 'e':	goto yy39;
	default:	goto yy7;
	}
yy38:
	yych = *++pos;
	if (yych <= 0x00) goto yy40;
	goto yy7;
yy39:
	yych = *++pos;
	if (yych <= 0x00) goto yy42;
	goto yy7;
yy40:
	++pos;
#line 36 "src/args.re"
	{ mode = 'o'; continue; }
#line 218 "src/args.cc"
yy42:
	++pos;
#line 39 "src/args.re"
	{ opts->InPlace = true; continue; }
#line 223 "src/args.cc"
}
#line 53 "src/args.re"

  }
  if (mode) {
    PrintLn("Missing option argument");
    PrintLn("");
    Help();
    exit(1);
  }
  return opts;
}
